/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-01-27 02:56:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Connection;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/./include/footer.jsp", Long.valueOf(1642990499599L));
    _jspx_dependants.put("/./include/header.jsp", Long.valueOf(1643251920159L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

	String loggedName = (String)session.getAttribute("name");
	String loggedId = (String)session.getAttribute("id");

      out.write("\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>INCLUDE</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/reset.css\" />\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/layout.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/form.css\" />\r\n");
      out.write("    <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("    <script src=\"js/jquery-3.6.0.min.js\"></script>  \r\n");
      out.write("    <script src=\"js/main.js\" defer></script>\r\n");
      out.write("  </head>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <header id=\"header\">\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("        <h1><a href=\"/member\">prohk</a></h1>\r\n");
      out.write("        <nav id=\"gnb\">\r\n");
      out.write("          <h2 class=\"hidden\">global navigation bar</h2>\r\n");
      out.write("          ");

          	if(loggedId==null){
          
      out.write("\r\n");
      out.write("          <ul>\r\n");
      out.write("            <li><a href=\"./login.jsp\">로그인</a></li>\r\n");
      out.write("            <li><a href=\"./join.jsp\">회원가입</a></li>\r\n");
      out.write("            <li><a href=\"./list.jsp\">회원관리</a></li>\r\n");
      out.write("            <li><a href=\"./board.jsp\">게시판</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("          ");

          	} else {
          		
          
      out.write("\r\n");
      out.write("          <ul>\r\n");
      out.write("            <li><a href=\"./member_info.jsp?user_id=");
      out.print( loggedId );
      out.write('"');
      out.write('>');
      out.print( loggedName );
      out.write("님</a></li>\r\n");
      out.write("          	<li><a href=\"./logout.jsp\">로그아웃</a></li>\r\n");
      out.write("            <li><a href=\"./list.jsp\">회원관리</a></li>\r\n");
      out.write("            <li><a href=\"./board.jsp\">게시판</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("          ");

          	}
          
      out.write("\r\n");
      out.write("        </nav>\r\n");
      out.write("      </div>\r\n");
      out.write("    </header>");
      out.write("\r\n");
      out.write("\r\n");

// 드라이버 연결
String driver = "oracle.jdbc.OracleDriver";
String url = "jdbc:oracle:thin:@localhost:1521:xe";
String id = "tis";
String pw = "1234";

      out.write("\r\n");
      out.write("\r\n");

// Injection
Connection conn = null;
PreparedStatement pstmt = null;
ResultSet rs = null;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<main>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h2 class=\"subTitle\">MEMBER LIST</h2>\r\n");
      out.write("		<div id=contents>\r\n");
      out.write("			<div class=\"tableBox\">\r\n");
      out.write("				<table>\r\n");
      out.write("					<colgroup>\r\n");
      out.write("						<col style=\"width: 30px\">\r\n");
      out.write("						<col style=\"width: 100px\">\r\n");
      out.write("						<col style=\"width: 100px\">\r\n");
      out.write("						<col style=\"width: 200px\">\r\n");
      out.write("						<col style=\"width: 150px\">\r\n");
      out.write("						<col style=\"width: 100px\">\r\n");
      out.write("						<col>\r\n");
      out.write("						<col style=\"width: 150px\">\r\n");
      out.write("					</colgroup>\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th>NO</th>\r\n");
      out.write("							<th>ID</th>\r\n");
      out.write("							<th>NAME</th>\r\n");
      out.write("							<th>EMAIL</th>\r\n");
      out.write("							<th>PHONE</th>\r\n");
      out.write("							<th>우편번호</th>\r\n");
      out.write("							<th>주소</th>\r\n");
      out.write("							<th>DATE</th>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("\r\n");
      out.write("						");

						String sql = "select * from member";
						try {
							Class.forName(driver);
							conn = DriverManager.getConnection(url, id, pw);
							pstmt = conn.prepareStatement(sql);
							rs = pstmt.executeQuery(); // 영향을 미친 갯수 반환
							while (rs.next()) {
							out.print("<tr>");
								out.print("<td>"+rs.getString("no")+"</td>");
								out.print("<td><a href='member_info.jsp?user_id="+rs.getString("id")+"'>"+rs.getString("id")+"</a></td>");
								// a태그는 get방식
								out.print("<td>"+rs.getString("name")+"</td>");
								out.print("<td>"+rs.getString("email")+"</td>");
								out.print("<td>"+rs.getString("phone")+"</td>");
								out.print("<td>"+rs.getString("zipcode")+"</td>");
								out.print("<td>"+rs.getString("address")+"</td>");
								out.print("<td>"+rs.getString("regdate")+"</td>");
							out.print("</tr>");
							}
						} catch (Exception e) {
							e.printStackTrace();
						} finally {
							if (pstmt != null)
								pstmt.close();
							if (conn != null)
								conn.close();
						}
						
      out.write("\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer id=\"footer\">\r\n");
      out.write("      <p>ALL COPYRIGHTS RESERVED BY PROHK</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
